name: esphome
description: Compile with ESPHome
inputs:
  version:
    description: ESPHome version
    required: false
    default: 'latest'
  config:
    description: ESPHome configuration file
    required: true
  substitutions:
    description: ESPHome substitution variables as json object string
    required: false
    default: '{}'
  configure_only:
    description: Run only configure when true or also compile when false
    required: false
    default: "false"
  python-version:
    description: Python version
    required: true
outputs:
  firmware-path:
    description: Path where firmware located when configure_only is not set or false
    value: ${{ steps.process.outputs.path }}
runs:
  using: "composite"
  steps:
    - name: Prepare environment for ESPHome ${{ inputs.version }}
      id: esphome
      env:
        ESPHOME_VERSION: ${{ inputs.version }}
      shell: bash
      run: |
        # Prepare environment for ESPHome ${{ inputs.version }}
        
        if [ "$ESPHOME_VERSION" == "latest" ]; then
          ESPHOME_VERSION=$(curl -s https://api.github.com/repos/esphome/esphome/releases/latest | jq -r .name)
        fi
        
        echo name=$ESPHOME_VERSION >> $GITHUB_OUTPUT
        echo path=~/.esphome-venv-$ESPHOME_VERSION >> $GITHUB_OUTPUT

        # Add requirements.txt if it does not exists 
        if [ ! -f requirements.txt ]; then
          touch requirements.txt
        fi

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.platformio/.cache
        key: ${{ runner.os }}-esphome-${{ steps.esphome.outputs.name }}-python-${{ inputs.python-version }}
    # - name: Cache python
    #   id: cache-python
    #   uses: actions/cache@v4
    #   with:
    #     path: ${{ runner.tool_cache }}
    #     key: ${{ runner.os }}-python-${{ inputs.python-version }}
    - name: Setup Python ${{ inputs.python-version }}
      id: python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'

    # - name: Cache virtual environment
    #   id: venv-cache
    #   uses: actions/cache@v4
    #   with:
    #     path: ${{ steps.esphome.outputs.path }}
    #     key: ${{ runner.os }}-python-${{ steps.python.outputs.python-version }}-esphome-venv-${{ steps.esphome.outputs.name }}
    - name: Create environment for ESPHome ${{ steps.esphome.outputs.path }}
      # if: steps.venv-cache.outputs.cache-hit != 'true'
      shell: bash
      env:
        ESPHOME_VENV: ${{ steps.esphome.outputs.path }}
      run: |
        # Create environment for ESPHome ${{ steps.esphome.outputs.path }}
        #python -m venv $ESPHOME_VENV
        #source $ESPHOME_VENV/bin/activate
        echo "::group::Installing ESPHome $ESPHOME_VERSION ($(python --version))"
        pip install --root-user-action=ignore setuptools jq yq esphome==$ESPHOME_VERSION
        echo "::endgroup::"
    - name: Process ESPHome configuration ${{ inputs.config }}
      id: process
      shell: bash
      env:
        ESPHOME_VENV: ${{ steps.esphome.outputs.path }}
        ESPHOME_CONFIG: ${{ inputs.config }}
        ESPHOME_SUBSTITUTIONS: ${{ inputs.substitutions }}
        ESPHOME_CONFIGURE: ${{ inputs.configure }}
      run: |
        # Process ESPHome configuration ${{ inputs.config }}
        #source $ESPHOME_VENV/bin/activate

        IFS=$'\n'
        substitutions=($(echo "$ESPHOME_SUBSTITUTIONS" | jq -r 'to_entries[]|"-s\n\(.key)\n\(.value)"'))
        echo "substitutions=${substitutions[@]}"

        echo "::group::Test configuration"
        esphome "${substitutions[@]}" config "$ESPHOME_CONFIG"
        echo "::endgroup::"

        if [ "$ESPHOME_CONFIGURE" != "true" ]; then
          ESPHOME_PROJECT=$(esphome "${substitutions[@]}" config "$ESPHOME_CONFIG" | yq -r .esphome.name)
          echo "ESPHOME_PROJECT=$ESPHOME_PROJECT"

          echo "::group::Execute compile for project $ESPHOME_PROJECT"
          esphome "${substitutions[@]}" compile "$ESPHOME_CONFIG"
          echo "::endgroup::"
          echo path=.esphome/build/$ESPHOME_PROJECT/.pioenvs/$ESPHOME_PROJECT >> $GITHUB_OUTPUT
        fi
